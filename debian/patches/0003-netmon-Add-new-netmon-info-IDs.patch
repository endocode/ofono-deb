From 2e37b9751cabf46f2f3b7915478aca2f5ed73f67 Mon Sep 17 00:00:00 2001
From: Djalal Harouni <djalal@endocode.com>
Date: Thu, 20 Oct 2016 13:43:59 +0200
Subject: [PATCH 03/58] netmon: Add new netmon info IDs

These IDs will be used by ublox modem to support CESQ AT command.

Change-Id: I8725d27059864b611f40b8ac8f39b841fd1b53ff
---
 include/netmon.h |  5 +++++
 src/netmon.c     | 62 +++++++++++++++++++++++++++++++++++++++++++++++++-------
 2 files changed, 60 insertions(+), 7 deletions(-)

diff --git a/include/netmon.h b/include/netmon.h
index ec8a2e1..abde225 100644
--- a/include/netmon.h
+++ b/include/netmon.h
@@ -59,6 +59,11 @@ enum ofono_netmon_info {
 	OFONO_NETMON_INFO_RSSI, /* int */
 	OFONO_NETMON_INFO_TIMING_ADVANCE, /* int */
 	OFONO_NETMON_INFO_PSC, /* int */
+	OFONO_NETMON_INFO_RSCP, /* int */
+	OFONO_NETMON_INFO_ECN0, /* int */
+	OFONO_NETMON_INFO_RSRQ, /* int */
+	OFONO_NETMON_INFO_RSRP, /* int */
+	OFONO_NETMON_INFO_OPERATOR, /* char *, up to 24 digits */
 	OFONO_NETMON_INFO_INVALID,
 };
 
diff --git a/src/netmon.c b/src/netmon.c
index 9d6de07..8f60952 100644
--- a/src/netmon.c
+++ b/src/netmon.c
@@ -43,6 +43,15 @@
 	ofono_dbus_dict_append(p_dict, key, dbus_type, &value); \
 } while (0)
 
+#define CELL_INFO_DICT_APPEND2(p_dict, key, info, type, dbus_type, e)	do { \
+	type value; \
+	if (info == e) \
+		break; \
+	value = (type) info; \
+	ofono_dbus_dict_append(p_dict, key, dbus_type, &value); \
+} while (0)
+
+
 static GSList *g_drivers = NULL;
 
 struct ofono_netmon {
@@ -78,7 +87,9 @@ void ofono_netmon_serving_cell_notify(struct ofono_netmon *netmon,
 	const char *technology = cell_type_to_tech_name(type);
 	char *mcc = NULL;
 	char *mnc = NULL;
-	int intval;
+	char *op = NULL;
+	int intval = -1;
+	double floatval = -1;
 	netmon->reply = dbus_message_new_method_return(netmon->pending);
 
 	if (netmon->reply == NULL)
@@ -148,8 +159,8 @@ void ofono_netmon_serving_cell_notify(struct ofono_netmon *netmon,
 		case OFONO_NETMON_INFO_RXLEV:
 			intval = va_arg(arglist, int);
 
-			CELL_INFO_DICT_APPEND(&dict, "ReceivedSignalStrength",
-					intval, uint8_t, DBUS_TYPE_BYTE);
+			CELL_INFO_DICT_APPEND2(&dict, "ReceivedSignalStrength",
+					intval, uint8_t, DBUS_TYPE_BYTE, 99);
 			break;
 
 		case OFONO_NETMON_INFO_TIMING_ADVANCE:
@@ -169,15 +180,52 @@ void ofono_netmon_serving_cell_notify(struct ofono_netmon *netmon,
 		case OFONO_NETMON_INFO_BER:
 			intval = va_arg(arglist, int);
 
-			CELL_INFO_DICT_APPEND(&dict, "BitErrorRate",
-					intval, uint8_t, DBUS_TYPE_BYTE);
+			CELL_INFO_DICT_APPEND2(&dict, "BitErrorRate",
+					intval, uint8_t, DBUS_TYPE_BYTE, 99);
 			break;
 
 		case OFONO_NETMON_INFO_RSSI:
 			intval = va_arg(arglist, int);
 
-			CELL_INFO_DICT_APPEND(&dict, "Strength",
-					intval, uint8_t, DBUS_TYPE_BYTE);
+			CELL_INFO_DICT_APPEND2(&dict, "Strength",
+					intval, uint8_t, DBUS_TYPE_BYTE, 99);
+			break;
+
+		case OFONO_NETMON_INFO_RSCP:
+			intval = va_arg(arglist, int);
+
+			CELL_INFO_DICT_APPEND2(&dict, "ReceivedSignalCodePower",
+					intval, uint8_t, DBUS_TYPE_BYTE, 99);
+			break;
+
+		case OFONO_NETMON_INFO_ECN0:
+			floatval = va_arg(arglist, double);
+
+			CELL_INFO_DICT_APPEND2(&dict, "ReceivedEnergyRatio",
+					floatval, double, DBUS_TYPE_DOUBLE, 99);
+			break;
+
+		case OFONO_NETMON_INFO_RSRQ:
+			floatval = va_arg(arglist, double);
+
+			CELL_INFO_DICT_APPEND2(&dict, "ReferenceSignalReceivedQuality",
+					floatval, double, DBUS_TYPE_DOUBLE, 99);
+			break;
+
+		case OFONO_NETMON_INFO_RSRP:
+			intval = va_arg(arglist, int);
+
+			CELL_INFO_DICT_APPEND2(&dict, "ReferenceSignalReceivedPower",
+					intval, uint8_t, DBUS_TYPE_BYTE, 99);
+			break;
+
+		case OFONO_NETMON_INFO_OPERATOR:
+			op = va_arg(arglist, char *);
+
+			if (op && strlen(op))
+				ofono_dbus_dict_append(&dict, "Operator",
+						DBUS_TYPE_STRING, &op);
+
 			break;
 
 		case OFONO_NETMON_INFO_INVALID:
-- 
2.7.4

